"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const index_1 = require("../util/index");
const restpaginator_1 = require("../restpaginator");
const userdescriptor_1 = require("../userdescriptor");
class UserDescriptors {
    constructor(services, url) {
        this.services = services;
        this.url = url;
    }
    getUserDescriptor(identity) {
        return __awaiter(this, void 0, void 0, function* () {
            const url = new index_1.UriBuilder(this.url).path(identity).build();
            let response = yield this.services.network.get(url);
            return new userdescriptor_1.UserDescriptor(this.services, response.body);
        });
    }
    getChannelUserDescriptors(channelSid, args = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const url = new index_1.UriBuilder(this.url)
                .arg('ChannelSid', channelSid).arg('PageToken', args.pageToken)
                .build();
            let response = yield this.services.network.get(url);
            return new restpaginator_1.RestPaginator(response.body.users.map(x => new userdescriptor_1.UserDescriptor(this.services, x)), pageToken => this.getChannelUserDescriptors(channelSid, { pageToken }), response.body.meta.prev_token, response.body.meta.next_token);
        });
    }
}
exports.UserDescriptors = UserDescriptors;
