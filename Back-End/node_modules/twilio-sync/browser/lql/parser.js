"use strict";

var _keys = require("babel-runtime/core-js/object/keys");

var _keys2 = _interopRequireDefault(_keys);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

Object.defineProperty(exports, "__esModule", { value: true });
var lexemes = require('./config/lexemes');
var lexer = require('./lexer');
var checker = require('./checker');
var syntaxer = require('./syntaxer');
function parseLiveQuery(options, query) {
    if (!query) {
        query = options;
        options = {};
    }
    if (query == null) {
        // should not be null or undefined
        throw new Error('Query string is a required parameter');
    }
    var lexemesArray = lexer.strToLexemes(query, options.spaces ? options.spaces : " \t\n");
    checker.check(lexemesArray);
    var tree = syntaxer.lexemesArrayToBinaryTree(options, lexemesArray);
    (0, _keys2.default)(lexemes).forEach(function (name) {
        if (lexemes[name].postFunction) {
            tree = lexemes[name].postFunction(name, tree);
        }
    });
    if (tree === null || tree === {}) {
        throw new Error('Unable to parse query');
    }
    return tree;
}
exports.parseLiveQuery = parseLiveQuery;